{
  "title": "Minificateur JavaScript",
  "description": "Minifiez et compressez le code JavaScript",
  "placeholder": "Collez votre code JavaScript ici...",
  "instructions": {
    "title": "Comment utiliser Minificateur JavaScript",
    "steps": [
      {
        "title": "Collez votre code JavaScript",
        "description": "Copiez et collez votre code JavaScript dans la zone de saisie. L'outil accepte tout format et le traitera immédiatement."
      },
      {
        "title": "Configurez les options (si disponible)",
        "description": "Ajustez les options de formatage, l'indentation ou d'autres paramètres pour correspondre à vos préférences."
      },
      {
        "title": "Examinez la sortie",
        "description": "L'outil va minifier et optimiser votre saisie et afficher le résultat avec formatage et validation appropriés."
      },
      {
        "title": "Copiez ou téléchargez le résultat",
        "description": "Copiez le JavaScript formaté dans votre presse-papiers pour utilisation immédiate ou téléchargez-le en tant que fichier."
      }
    ],
    "features": [
      "Traitement en temps réel avec résultats instantanés",
      "Aucune limite de taille pour le traitement basé sur navigateur",
      "Complètement sécurisé - tout le traitement se fait dans votre navigateur",
      "Aucun téléchargement de données ou stockage serveur",
      "Copier dans le presse-papiers en un clic",
      "Télécharger les résultats sous forme de fichier",
      "Validation de syntaxe et mise en évidence des erreurs",
      "Fonctionne hors ligne après le chargement initial"
    ],
    "useCases": [
      "Nettoyer et formater le code désordonné pour une meilleure lisibilité",
      "Standardiser le style de code dans les équipes de développement",
      "Déboguer les structures complexes avec une indentation appropriée",
      "Préparer le code pour la documentation et les revues de code",
      "Convertir entre différents standards de formatage",
      "Valider la syntaxe avant le déploiement",
      "Traiter les données provenant de sources externes ou d'API",
      "Générer du code prêt pour la production"
    ],
    "proTips": [
      "Utilisez les raccourcis clavier pour un flux de travail plus rapide",
      "Traitez les gros fichiers en petits morceaux si les performances ralentissent",
      "Validez votre saisie avant le traitement pour détecter les erreurs tôt",
      "Enregistrez les paramètres fréquemment utilisés par défaut",
      "Utilisez la fonction de téléchargement pour archiver les fichiers",
      "Vérifiez attentivement la sortie avant utilisation en production"
    ],
    "troubleshooting": [
      "Erreurs de syntaxe : vérifiez les crochets, guillemets ou points-virgules manquants",
      "Échec de traitement : assurez-vous que le format de saisie est valide",
      "Performance lente : essayez de traiter de plus petits morceaux de données",
      "Fonctionnalités manquantes : certaines syntaxes avancées peuvent nécessiter un formatage manuel",
      "Compatibilité navigateur : utilisez Chrome, Firefox ou Edge pour de meilleurs résultats"
    ],
    "keyboardShortcuts": [
      {
        "keys": "Ctrl+V",
        "description": "Coller l'entrée"
      },
      {
        "keys": "Ctrl+Enter",
        "description": "Traiter/Formater"
      },
      {
        "keys": "Ctrl+C",
        "description": "Copier le résultat"
      },
      {
        "keys": "Ctrl+S",
        "description": "Télécharger le fichier"
      }
    ]
  },
  "meta": {
    "title": "Minificateur JavaScript - Outil en Ligne Gratuit | ToolsLab",
    "description": "Minifiez et compressez le code JavaScript en ligne. Réduisez la taille du fichier pour un chargement plus rapide. Outil minificateur JS gratuit."
  },
  "tagline": "Minify and optimize JavaScript code with ES6+ support and source maps",
  "pageDescription": "Professional JavaScript minifier and beautifier with ES2024+ support, reducing bundle size by up to 70% while maintaining functionality. Features advanced optimizations including dead code elimination, variable renaming, function inlining, and tree shaking simulation. Generate source maps for debugging, apply varying compression levels, and maintain modern JavaScript compatibility. Process code securely in your browser with no server uploads - perfect for production optimization and webpack alternative processing."
}
